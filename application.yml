server:
  port: 2032
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript
    min-response-size: 100
  http2:
    enabled: true
logging:
  level:
    org:
      springframework:
        cloud:
          sleuth: DEBUG
spring:
  application:
    name: or-group-service
  cloud:
    config:
      import-check:
        enabled: false
  datasource:
    url: jdbc:postgresql://10.153.5.4:5432/dynamic_lokos_or
    username: lokosdbuser
    password: Aor@4dda$$&
    driverClassName: org.postgresql.Driver
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 100
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  redis:
    host:
    cluster:
      nodes: 10.153.3.5:6379,10.153.3.5:13002
    password: KFjJpWMbpkU75mECHixmvpNR9Z1HpQ8uBAzCaJCPxig=
  zipkin:
    base-url: http://localhost:9411/
    enabled: true
    sleuth:
      sampler:
        probability: 1.0
cache:
  prefix: "or"

flyway:
  enabled: false

path:
  menu:
    master: /root/Desktop/LokOS/menuMaster.json
    mastermapperrole:
      mapper: /root/Desktop/LokOS/mapRoleData.json
  bank:
    master: /root/Desktop/LokOS/menuJson/bank/bankMaster.json
  branch:
    folder: /root/Desktop/LokOS/menuJson/branch
  filex:
    fundtypemaster: /root/Desktop/LokOS/LokosGeo2/fundtypemasterlist/
    state: /root/Desktop/LokOS/LokosGeo2/State/
    district: /root/Desktop/LokOS/LokosGeo2/State/district/
    block: /root/Desktop/LokOS/LokosGeo2/State/district/block/
    panchyat: /root/Desktop/LokOS/LokosGeo2/State/district/block/panchayat/
    village: /root/Desktop/LokOS/LokosGeo2/State/district/block/panchayat/village/


  JsonMaster: /root/Desktop/LokOS/LokosLanguage/add/

management:
  endpoint:
    shutdown:
      enabled: true
      show-details: always
    health:
      show-details: always
    prometheus:
      enabled: true
      show-details: always
    metrics:
      enabled: true
      show-details: always
    threaddump:
      enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,shutdown,env,metrics,threaddump
  health:
    probes:
      enabled: true
  security:
    enabled: false
keycloak:
  auth-server-url: https://accounts.lokos.in/
  realm: lokos-staging
  resource: service
  credentials:
    secret: 1zgcOCGkVP56sjAmo4MAwKhkEPfEd21R
  securityConstraints:
    - authRoles:
        - '*'
      securityCollections:
        - name: Group Service
          patterns:
            - '/group/v2/*'
  bearer-only: true
  policy-enforcer-config:
    http-method-as-scope: true
    paths:
      - path: '/group/v2/*'
        methods:
          - method: GET
            # scopes:
            #   - GET
          - method: POST
            # scopes:
            #   - POST
          - method: PUT
            # scopes:
            #   - PUT
          - method: DELETE
            # scopes:
            #   - DELETE
        enforcement-mode: ENFORCING
      - path: '/actuator/*'
        enforcement-mode: DISABLED
      - path: '/profile/*'
        enforcement-mode: DISABLED

springdoc:
  swagger-ui:
    path: /profile/
    operationsSorter: alpha
  api-docs:
    path: /profile/v3/api-docs

azure:
  storage:
    connection-url: "https://uatlokosstates.blob.core.windows.net"
    account-name: "uatlokosstates"
    account-key: "GEvksGX4Vyd+45/flyw918rYhxmnSqX6/NHZK7d9K3RG+1WnnIQK9rISZ66wkIvSG8Cxd9sxcunV+AStESkG1Q=="
upload_fileSize: 10485760
  #10485760 10 MB max
cdn: "https://cdn.lokos.in/"
lakhpati_didi: "lakhpati"